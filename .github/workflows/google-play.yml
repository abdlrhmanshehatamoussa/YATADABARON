name: deploy-flutter-googleplay-fastlane

on:
  push:
    tags: 
      - 'gp_alpha@*@*'
      - 'gp_beta@*@*'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Extracting Lane, Version and Build Number
        id: gitinfo
        run: |
          tag_name=${GITHUB_REF##*/}
          tag_name_splitted=(${tag_name//@/ })
          echo Tag Name=${tag_name}
          lane=${tag_name_splitted[0]}
          version=${tag_name_splitted[1]}
          buildNumber=${tag_name_splitted[2]}
          echo lane=$lane, version=$version, build_number=$buildNumber
          echo "::set-output name=lane::$lane"
          echo "::set-output name=version::$version"
          echo "::set-output name=buildNumber::$buildNumber"
      
      - name: Preparing Secret Keys
        id: gitsecrets
        run: |
          echo "::set-output name=GOOGLEPLAY_KEYSTORE_ALIAS::GOOGLEPLAY_KEYSTORE_ALIAS"
          echo "::set-output name=GOOGLEPLAY_KEYSTORE_STORE_PASSWORD::GOOGLEPLAY_KEYSTORE_STORE_PASSWORD"
          echo "::set-output name=GOOGLEPLAY_KEYSTORE_KEY_PASSWORD::GOOGLEPLAY_KEYSTORE_KEY_PASSWORD"
          echo "::set-output name=GOOGLEPLAY_KEYSYORE_CONTENT_BASE64::GOOGLEPLAY_KEYSYORE_CONTENT_BASE64"
          echo "::set-output name=GOOGLEPLAY_CREDENTIALS_FILE::GOOGLEPLAY_CREDENTIALS_FILE"
          echo "::set-output name=GOOGLEPLAY_KEYSYORE_FILE_PASSPHRASE::GOOGLEPLAY_KEYSYORE_FILE_PASSPHRASE"
          echo "::set-output name=GOOGLEPLAY_CREDENTIALS_FILE_PASSPHRASE::GOOGLEPLAY_CREDENTIALS_FILE_PASSPHRASE"

      - name: Creating Keystore file
        run: |
          cd android  
        
          cd app
          keyFileAsc=key.asc
          keyFile=key.jks
          echo "${{secrets[steps.gitsecrets.outputs.GOOGLEPLAY_KEYSYORE_CONTENT_BASE64]}}">$keyFileAsc
          gpg -d --passphrase "${{secrets[steps.gitsecrets.outputs.GOOGLEPLAY_KEYSYORE_FILE_PASSPHRASE]}}" --batch $keyFileAsc > $keyFile

          cd ../
          keyPropFile=key.properties
          touch $keyPropFile
          echo keyAlias=${{secrets[steps.gitsecrets.outputs.GOOGLEPLAY_KEYSTORE_ALIAS]}}>$keyPropFile
          echo keyPassword=${{secrets[steps.gitsecrets.outputs.GOOGLEPLAY_KEYSTORE_KEY_PASSWORD]}}>>$keyPropFile
          echo storePassword=${{secrets[steps.gitsecrets.outputs.GOOGLEPLAY_KEYSTORE_STORE_PASSWORD]}}>>$keyPropFile
          echo storeFile=$keyFile>>$keyPropFile

      - name: Creating Version file
        run: |
          pwd
          cd android
          verPropFile=version.properties
          touch $verPropFile
          echo flutter.versionName=${{steps.gitinfo.outputs.version}}>$verPropFile
          echo flutter.versionCode=${{steps.gitinfo.outputs.buildNumber}}>>$verPropFile

      - name: Creating GooglePlay Credentials file
        run: |
          pwd
          cd android
          secretJsonFile=secret.json
          secretJsonFileAsc=secret.json.asc
          touch $secretJsonFile
          echo "${{secrets[steps.gitsecrets.outputs.GOOGLEPLAY_CREDENTIALS_FILE]}}" >> $secretJsonFileAsc
          gpg -d --passphrase "${{secrets[steps.gitsecrets.outputs.GOOGLEPLAY_CREDENTIALS_FILE_PASSPHRASE]}}" --batch $secretJsonFileAsc > $secretJsonFile

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7

      - name: Install Fastlane dependencies
        run: |
          pwd
          cd android
          bundle install

      - name: Testing Fastlane installation
        run: |
          pwd
          cd android
          cat secret.json
          bundle exec fastlane run validate_play_store_json_key

      
      - name: "Setup Java"
        uses: actions/setup-java@v1
        with:
          java-version: '12.x'


      - name: "Setup Flutter"
        uses: subosito/flutter-action@v1
        with:
          flutter-version: '1.17.3'

      - name: Build
        run: |
          pwd
          cd android
          flutter build apk --release

      - name: Deploy
        run: |
          pwd
          cd android
          lane=${{steps.gitinfo.outputs.lane}}
          bundle exec fastlane $lane